[{"title":"Android Studio的六种依赖关系","url":"http://yoursite.com/2016/09/13/Android-Compile-Type/","content":"<blockquote>\n<p>在Android Studio中有六种依赖<br>Compile、Provided、APK、Test compile、Debug compile、Release compile</p>\n</blockquote>\n<p><strong>如下图所示</strong></p>\n<p><img src=\"http://images.cnitblog.com/blog2015/54939/201504/231129521259725.png\" alt=\"实例\"></p>\n<p>###Compile<br>compile是对所有的build type以及favlors都会参与编译并且打包到最终的apk文件中。</p>\n<p>###Provided<br>Provided是对所有的build type以及favlors只在编译时使用，类似eclipse中的external-libs,只参与编译，不打包到最终apk。</p>\n<p>###APK<br>只会打包到apk文件中，而不参与编译，所以不能再代码中直接调用jar中的类或方法，否则在编译时会报错</p>\n<p>###Test compile<br>Test compile 仅仅是针对单元测试代码的编译编译以及最终打包测试apk时有效，而对正常的debug或者release apk包不起作用。</p>\n<p>###Debug compile<br>Debug compile 仅仅针对debug模式的编译和最终的debug apk打包。</p>\n<p>###Release compile<br>Release compile 仅仅针对Release 模式的编译和最终的Release apk打包。</p>\n"},{"title":"粒子喷发效果","url":"http://yoursite.com/2016/09/07/TV开发/","content":"<h1 id=\"高度自定义的粒子喷发效果\"><a href=\"#高度自定义的粒子喷发效果\" class=\"headerlink\" title=\"高度自定义的粒子喷发效果\"></a>高度自定义的粒子喷发效果</h1><blockquote>\n<p>Confetti是一个可以在任何时候任何地方随机发射纸屑的粒子系统库。可以轻松自定义，非常强大。比如，你可以指定随机发射的源（圆点或者线），物理约束（速度，加速度以及旋转等），以及对纸片（Confetto）（是的,就是这个单词，它是confetti的单数形式 ）的任何实现。然后这个library将在屏幕上显示你指定的纸屑发射效果。</p>\n</blockquote>\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><p>在build.gradle中添加代码</p>\n<blockquote>\n<p>compile ‘com.github.jinatonic.confetti:confetti:1.0.0’</p>\n</blockquote>\n<p>示例代码<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> ConfettiManager(context, generator, confettiSource, container)</div><div class=\"line\">        .setTTL(<span class=\"number\">1000</span>) </div><div class=\"line\">        .setBound(explosionBound)</div><div class=\"line\">        .setVelocityX(<span class=\"number\">0</span>, defaultVelocityFast)</div><div class=\"line\">        .setVelocityY(<span class=\"number\">0</span>, defaultVelocityFast) </div><div class=\"line\">        .enableFadeOut(Utils.getDefaultAlphaInterpolator()) </div><div class=\"line\">        .setRotationalVelocity(<span class=\"number\">180</span>, <span class=\"number\">180</span>);</div></pre></td></tr></table></figure></p>\n<h3 id=\"效果如下所示\"><a href=\"#效果如下所示\" class=\"headerlink\" title=\"效果如下所示\"></a>效果如下所示</h3><p><img src=\"https://github.com/jinatonic/confetti/raw/master/assets/falling_confetti_top.gif\" alt=\"\"><br>更多资料可访问原作者链接<br><a href=\"https://github.com/jinatonic/confetti\" target=\"_blank\" rel=\"external\">Githup</a></p>\n"},{"title":"about","url":"http://yoursite.com/about/index.html","content":""},{"title":"category","url":"http://yoursite.com/category/index.html","content":""},{"title":"","url":"http://yoursite.com/css/personal-style.css","content":"html.page-home {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  /*background-image: url('/images/bg.jpg');*/\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n\n  /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n  /*background-blend-mode: screen;*/\n\n  /*background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}"},{"title":"link","url":"http://yoursite.com/link/index.html","content":""},{"title":"search","url":"http://yoursite.com/search/index.html","content":""}]